* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  height: 100%;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* background: linear-gradient(45deg, #007243 0%, #1effa3 30%, #fff 100%); */
  background: linear-gradient(45deg, #1effa3 0%, #fff 50%);
  background-repeat: no-repeat;
  background-attachment: fixed;
  height: 100%;
  color: var(--txtColor);
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

:root {
  --primaryDarkColor: hsl(155, 100%, 35%);
  --primaryColor: hsl(155, 100%, 70%);
  --primaryHoverColor: hsl(156, 97%, 85%);
  --txtColor: hsl(0, 0%, 100%);
  --bgColor: hsl(0, 0%, 13%);
  --bgTaskColor: hsl(0, 0%, 20%);
  --alertColor: hsl(0, 100%, 50%);

  --slightBorderRadius: 6px;
  --averageBorderRadius: 12px;
}

/* Button */
button {
  background-color: var(--primaryColor);
  color: var(--bgColor);
  border: none;
  border-radius: var(--slightBorderRadius);
  padding: 6px 12px;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

button:hover {
  background-color: var(--primaryHoverColor);
}

/* Input  */
input {
  padding: 6px;
  font-size: 1.2rem;
  border: hidden;
  border-bottom: 2px solid var(--primaryColor);
  background-color: transparent;
  color: var(--txtColor);
  transition: border-color 0.2s ease;
}

input:hover,
input:focus {
  border-color: var(--primaryHoverColor);
}

input:focus,
select:focus {
  outline: none;
}

::-webkit-calendar-picker-indicator {
  filter: invert(1);
  cursor: pointer;
}

.validateError {
  border-bottom: 2px solid var(--alertColor);
}

input[type="color"] {
  border: none;
}

/* Custom input checkbox */
input[type="checkbox"] {
  appearance: none;
  cursor: pointer;
  margin: 0;
  background-color: transparent;
  color: transparent;
  border: 2px solid var(--primaryColor);
}

input[type="checkbox"]:hover {
  border: 2px solid var(--primaryHoverColor);
  color: var(--bgTaskColor);
}

input[type="checkbox"]:checked {
  appearance: none;
  background-color: var(--primaryColor);
  color: var(--bgTaskColor);
  text-align: center;
}

input[type="checkbox"]:after {
  font-family: 'Material Icons';
  content: "done";
  vertical-align: middle;
}

input[type="checkbox"]:checked:after {
  font-family: 'Material Icons';
  content: "done";
  vertical-align: middle;
}

/* ///////////// */

/* --- Task App --- */
section {
  display: flex;
  justify-content: center;
  align-items: center;
}

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin: 20px;
}

.wrapperTodo {
  width: 80%;
  height: 100%;
}

/* --- TaskForm --- */

.taskForm {
  background-color: var(--bgColor);
  padding: 20px;
  width: 100%;
  border-radius: var(--averageBorderRadius);
}

.taskTitle {
  padding-bottom: 20px;
}

.taskTitle h2 {
  font-size: 2rem;
}

.inputForm {
  display: flex;
  flex-direction: column;
}

.inputForm .inputWrapper {
  padding-bottom: 20px;
  width: 100%;
}

.inputForm .inputWrapper div {
  display: inline-block;
  width: 40%;
  padding-right: 20px;
}

.inputForm input {
  width: 100%;
  margin-right: 20px;
}

.inputWrapper {
  position: relative;
}

.inputWrapper input[type="checkbox"],
.inputWrapper input[type="color"] {
  width: 39px !important;
  height: 39px;
}

.inputWrapper input[type="color"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: transparent;
  cursor: pointer;
  position: absolute;
  height: 100%;
  padding: 0 0 20px 0;
}

.inputWrapper input[type="color"]::-webkit-color-swatch {
  border-radius: var(--slightBorderRadius);
  height: 100%;
}

.inputWrapper input[type="color"]::-moz-color-swatch {
  border-radius: var(--slightBorderRadius);
  height: 100%;
}

.inputForm .options {
  display: flex;
  justify-content: space-between;
}

.inputForm .options button {
  font-size: 1.2rem;
}

/* react-select */
.inputForm .options .react-select {
  background-color: var(--primaryColor);
  color: var(--bgColor);
  border-radius: var(--slightBorderRadius);
  font-size: 1.2rem;
}

.react-select svg {
  color: var(--bgColor);
}

.react-select span {
  background-color: var(--bgColor);
}

/* --- TaskList --- */
.taskList.active {
  margin: 20px 0;
  padding: 10px;
  border-radius: var(--averageBorderRadius);
  background-color: var(--bgColor);
  overflow: hidden;
}

/* --- Task --- */
.taskWrapper {
  background-color: var(--bgTaskColor);
  border-radius: var(--averageBorderRadius);
  padding: 10px 10px 10px 20px;
  margin-bottom: 10px;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  animation: ejectingTask 0.3s;
  transition: background-color 0.2s ease;
}

.taskWrapper.done {
  filter: grayscale(80%);
}

.taskWrapper:hover {
  background-color: hsl(0, 0%, 23%);
}

.taskWrapper:last-child {
  margin-bottom: 0;
}

.textWrapper {
  display: flex;
  flex-direction: column;
}

.primaryView {
  display: flex;
  justify-content: space-between;
}

.primaryView span {
  font-size: 1.2rem;
  font-weight: 600;
}

.primaryView .outdated {
  color: var(--alertColor);
}

.extendedView {
  padding-top: 20px;
}

.extendedView .options {
  padding-top: 20px;
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.extendedView .options button {
  width: 100%;
  margin-right: 10px;
  font-weight: 600;
  color: var(--bgTaskColor);
}

.extendedView .options button:last-child {
  margin-right: 0;
}

.taskColor {
  width: 10px;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
}

.taskWrapper.edit {
  cursor: auto;
}

.taskWrapper.edit input[type="date"],
.taskWrapper.edit input[type="checkbox"] {
  margin-left: 10px;
}

/* --- Task Edit--- */

.primaryView .inputWrapper:last-child {
  display: flex;
  justify-content: flex-end;
}

.extendedView .inputWrapper {
  padding-bottom: 20px;
}

.taskWrapper.edit .inputWrapper.color {
  height: 59px;
  padding-bottom: 0;
}

.taskWrapper.edit .extendedView .options {
  padding-top: 0;
}

/* --- Media ---  */


@media only screen and (max-width: 1199px) {
  .inputForm .inputWrapper div {
    width: 50%;
  }
}

@media only screen and (max-width: 991px) {
  .inputForm .inputWrapper div {
    width: 100%;
  }

  .inputWrapper.primary {
    padding-bottom: 0;
  }

  .inputWrapper input {
    margin-bottom: 20px;
  }

  .inputWrapper input[type="color"] {
    height: 100%;
    padding: 0;
    height: 39px;
  }

  .taskWrapper.edit .primaryView {
    flex-direction: column-reverse;
  }

  .taskWrapper.edit .inputWrapper input {
    width: 100%;
  }

  .extendedView {
    padding: 0;
  }
}

@media only screen and (max-width: 767px) {
  .wrapperTodo {
    width: 100%;
  }
}

@media only screen and (max-width: 419px) {}


/* --- KeyFrames --- */
@keyframes ejectingTask {
  from {
    transform: translateX(-100%);
  }

  to {
    transform: translateX(0);
  }
}